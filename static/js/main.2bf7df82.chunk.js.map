{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","components/Header.jsx","index.js"],"names":["Button","click","reset","equal","del","label","attribute","theme","className","onClick","Calculator","useState","active","currentClass","setTheme","changeTheme","e","setBackground","document","body","style","backgroundColor","displayValue","operation","clearDisplay","values","current","display","setDisplay","valueControl","digit","handleButtonClick","includes","i","NewValue","parseFloat","handleOperation","equals","currentOperation","eval","deleteNumber","toString","length","substring","handleClearDisplay","clear","Display","Header","htmlFor","id","name","type","defaultChecked","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bf7df82.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/Button.css'\r\n\r\nconst Button = ({click, reset, equal, del, label, theme}) => {\r\n    let attribute = \"button \" + theme\r\n    attribute += reset ? ' reset' : ''\r\n    attribute += equal ? ' equal' : ''\r\n    attribute += del ? ' delete' : ''\r\n\r\n    \r\n\r\n\r\n    return (                    \r\n            <button className={attribute}  onClick={() => click(label)}>\r\n                {label}\r\n            </button>\r\n        \r\n     );\r\n}\r\n\r\nexport default Button\r\n \r\n","import React, { useState }  from 'react';\r\nimport Display from '../components/Display';\r\nimport Button from '../components/Button';\r\nimport Header from '../components/Header'\r\nimport './Calculator.css'\r\n\r\n\r\n\r\nconst Calculator = () => {\r\n\r\n    const [theme, setTheme] = useState(\r\n        {\r\n        className: ['Blue','White','Purple'] , \r\n        active: [true, false, false],\r\n        currentClass: 'Blue'            \r\n        }      \r\n)\r\n\r\n    const changeTheme = (e) => {        \r\n        const active = [false, false, false]\r\n        active[e] = true\r\n        const currentClass = active[e] ? theme.className[e] : '' \r\n        setTheme({...theme, active, currentClass})                \r\n        setBackground(currentClass)         \r\n    }\r\n\r\n    const setBackground = (currentClass) => {        \r\n        switch (currentClass) {\r\n            case 'Blue': \r\n                document.body.style.backgroundColor = \"hsl(222, 26%, 31%)\"                          \r\n                break;\r\n            case 'White': \r\n                document.body.style.backgroundColor = \"hsl(0, 0%, 90%)\"                           \r\n                break;\r\n            case 'Purple': \r\n                document.body.style.backgroundColor = \"hsl(268, 75%, 9%)\"                           \r\n                break;           \r\n        }       \r\n    }\r\n        \r\n\r\n    const [display, setDisplay] = useState(\r\n        {\r\n            displayValue: '0',\r\n            operation: null,\r\n            clearDisplay: false,           \r\n            values: [0,0],\r\n            current: 0            \r\n        }\r\n    )\r\n\r\n    const valueControl = (digit) => {\r\n        if(digit !== '.') {\r\n            return ''\r\n        } else {\r\n            return '0'\r\n        }\r\n    }\r\n\r\n    const handleButtonClick = (digit) => {\r\n        try {\r\n            if (digit === '.' && display.displayValue.includes('.')) {\r\n                return\r\n            } \r\n        } catch {\r\n            \r\n        }      \r\n\r\n        const clearDisplay = display.displayValue === '0' || display.clearDisplay              \r\n        const currentValue = clearDisplay ? valueControl(digit) : display.displayValue\r\n        const displayValue = currentValue + digit  \r\n        const i = display.current\r\n        const NewValue = parseFloat(displayValue)\r\n        const values = {...display.values}\r\n        values[i] = NewValue\r\n        setDisplay({...display, displayValue, values, clearDisplay: false})             \r\n    }\r\n\r\n    const handleOperation = (operation) => {\r\n\r\n        if(display.current === 0) {\r\n            setDisplay({...display, operation, current: 1, clearDisplay: true})\r\n        } else {\r\n            const equals = operation === '='\r\n            let currentOperation = display.operation\r\n            if(currentOperation === 'x') currentOperation = '*'\r\n            const values = {...display.values}\r\n\r\n            try {\r\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n            } catch(e) {\r\n                values[0] = display.values[0]                \r\n            }       \r\n                 \r\n            values[1] = 0\r\n            setDisplay({\r\n                displayValue: values[0],\r\n                operation: equals ? null : operation,\r\n                current: equals ? 0 : 1,\r\n                clearDisplay: !equals,\r\n                values\r\n            })\r\n        } \r\n    }\r\n\r\n\r\n    const deleteNumber = () => {   \r\n        let displayValue = display.displayValue.toString()\r\n        \r\n        if (displayValue.length > 1) {\r\n            displayValue = displayValue.substring(0, displayValue.length - 1)\r\n            let i = display.current\r\n            const values = {...display.values}\r\n            values[i] = displayValue\r\n            setDisplay({...display, displayValue, values})            \r\n        } else {\r\n            return\r\n        }           \r\n    }\r\n\r\n\r\n    const handleClearDisplay = () => {       \r\n        setDisplay({\r\n            displayValue: '0',\r\n            current: 0,            \r\n            values: [0,0],\r\n            clear: true\r\n        })  \r\n    }   \r\n                \r\n\r\n    return (\r\n        <>\r\n           <div>\r\n               <Header changeTheme={changeTheme} theme={theme}/>\r\n           </div>\r\n           <div>\r\n              <Display display={display} theme={theme}/>\r\n            </div>\r\n           <div className={`container-keys ${theme.currentClass}`}>            \r\n                <Button label=\"7\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"8\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"9\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"DEL\" click={deleteNumber} del=\"delete\" theme={theme.currentClass}/>\r\n                <Button label=\"4\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"5\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"6\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"+\" click={handleOperation} theme={theme.currentClass}/>\r\n                <Button label=\"1\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"2\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"3\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"-\" click={handleOperation} theme={theme.currentClass}/>\r\n                <Button label=\".\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"0\" click={handleButtonClick} theme={theme.currentClass}/>\r\n                <Button label=\"/\" click={handleOperation} theme={theme.currentClass}/>\r\n                <Button label=\"x\" click={handleOperation} theme={theme.currentClass}/>            \r\n                <Button label=\"RESET\" click={handleClearDisplay} reset=\"reset\"  theme={theme.currentClass}/>\r\n                <Button label=\"=\" equal=\"equal\" click={handleOperation} theme={theme.currentClass}/>            \r\n            </div>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculator\r\n\r\n\r\n\r\n    ","import React from 'react';\r\nimport './css/Display.css'\r\n\r\nconst Display = ({display, theme}) => {\r\n    \r\n    return (\r\n        <div className={`container-display ${theme.currentClass}`}>\r\n           <h1>{display.displayValue}</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import React from 'react';\r\nimport './css/Header.css'\r\n\r\n\r\n\r\n\r\nconst Header = ({changeTheme, theme}) => {        \r\n    \r\n    \r\n   return (\r\n       <div className={`Header ${theme.currentClass}`}>\r\n           <div>\r\n               <h1>calc</h1>\r\n           </div>\r\n\r\n           <div className=\"Header-Theme\">                 \r\n               <div></div>\r\n               <div className=\"Header-Numbers\">\r\n                 <label htmlFor=\"0\">1</label> \r\n                 <label htmlFor=\"1\">2</label>                \r\n                 <label htmlFor=\"2\">3</label>\r\n               </div>\r\n               <div>\r\n                 <label>THEME</label>\r\n               </div>\r\n               \r\n               <div className={`slider ${theme.currentClass}`}>\r\n                   <div>                                                               \r\n                       <input id=\"0\" name=\"slider1\" className={`switch ${theme.currentClass} ${theme.active[0]}`} type=\"checkbox\" defaultChecked={true}\r\n                         onClick={ e => changeTheme(e.target.id)}/>\r\n                   </div>\r\n                   <div>                       \r\n                       <input id=\"1\" name=\"slider2\"className={`switch ${theme.currentClass} ${theme.active[1]}`} type=\"checkbox\" defaultChecked={false} \r\n                       onClick={ e => changeTheme(e.target.id)}/>\r\n                   </div>\r\n                   <div>                      \r\n                       <input id=\"2\" name=\"slider3\" className={`switch ${theme.currentClass} ${theme.active[2]}`} type=\"checkbox\" defaultChecked={false} \r\n                       onClick={ e => changeTheme(e.target.id)}/>\r\n                   </div>\r\n                \r\n               </div> \r\n\r\n           </div>\r\n       </div>\r\n   )\r\n\r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './main/Calculator'\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}